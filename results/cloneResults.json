CLONES:clone_class_i: Connection con = AllTests.getConnection();ELITSAtry{ELITSAcon.createStatement().execute();ELITSAassertRowCount( 0,);ELITSAcon.createStatement().execute();ELITSAassertRowCount( 1,);ELITSAassertRowCount( 0,);Statement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);<|project://smallsql0.21_src/src/smallsql/junit/TestScrollable.java|,31,39><|project://smallsql0.21_src/src/smallsql/junit/TestScrollable.java|,57,65><|project://smallsql0.21_src/src/smallsql/junit/TestScrollable.java|,87,95>clone_class_i: try{ELITSArs.getString();ELITSAfail();ELITSA}catch(SQLException ex){ELITSAassertSQLException(, 0, ex);ELITSA}ELITSA}<|project://smallsql0.21_src/src/smallsql/junit/TestScrollable.java|,79,86><|project://smallsql0.21_src/src/smallsql/junit/TestScrollable.java|,110,117>clone_class_i: init();ELITSAConnection con = AllTests.getConnection();ELITSAStatement st = con.createStatement();ELITSAResultSet rs;ELITSAString oldValue;ELITSArs = st.executeQuery(+ table1 +);ELITSAassertTrue( rs.next() );oldValue = rs.getString();assertNull(oldValue);assertTrue( rs.next() );oldValue = rs.getString();int count = 1;while(rs.next()){<|project://smallsql0.21_src/src/smallsql/junit/TestOrderBy.java|,176,189><|project://smallsql0.21_src/src/smallsql/junit/TestOrderBy.java|,213,226>clone_class_i: try{ELITSAst.execute();ELITSAfail();ELITSA}catch(SQLException e){ELITSAassertSQLException(, 0, e);ELITSA}ELITSA<|project://smallsql0.21_src/src/smallsql/junit/TestExceptionMethods.java|,107,113><|project://smallsql0.21_src/src/smallsql/junit/TestExceptionMethods.java|,139,145>clone_class_i: Connection con = AllTests.getConnection();ELITSAtry{ELITSAcon.createStatement().execute();ELITSAassertRowCount( 0,);ELITSAcon.createStatement().execute();ELITSAassertRowCount( 1,);ELITSA<|project://smallsql0.21_src/src/smallsql/junit/TestOther.java|,81,87><|project://smallsql0.21_src/src/smallsql/junit/TestOther.java|,143,149><|project://smallsql0.21_src/src/smallsql/junit/TestTransactions.java|,52,58>clone_class_i: assertEquals(1,pr.executeUpdate());ELITSArs = pr.getGeneratedKeys();ELITSAassertNotNull(, rs);ELITSAassertEquals(,1,rs.getMetaData().getColumnCount());ELITSAassertEquals(,,rs.getMetaData().getColumnName(1));ELITSAassertRowCount(1,rs);ELITSA<|project://smallsql0.21_src/src/smallsql/junit/TestStatement.java|,196,202><|project://smallsql0.21_src/src/smallsql/junit/TestStatement.java|,209,215>clone_class_i: }catch(Exception e){ELITSASystem.out.println(+e);ELITSA}finally{ELITSASystem.out.println();ELITSASystem.out.println();ELITSA}ELITSA}<|project://smallsql0.21_src/src/smallsql/junit/BenchTest.java|,335,342><|project://smallsql0.21_src/src/smallsql/junit/BenchTest.java|,495,502>clone_class_i: init();ELITSAConnection con = AllTests.getConnection();ELITSAPreparedStatement pr = con.prepareStatement(+ table1 +);ELITSAfor(int i=1; i<=3; i++){ELITSAResultSet rs = pr.executeQuery( );ELITSAassertTrue  (+i, rs.next());ELITSA<|project://smallsql0.21_src/src/smallsql/junit/TestGroupBy.java|,91,97><|project://smallsql0.21_src/src/smallsql/junit/TestGroupBy.java|,104,110>clone_class_i: }finally{ELITSAtry{ELITSAcon.createStatement().execute();ELITSA}catch(Throwable e){e.printStackTrace();}ELITSAcon.setAutoCommit(true);ELITSA}ELITSA}<|project://smallsql0.21_src/src/smallsql/junit/TestTransactions.java|,86,93><|project://smallsql0.21_src/src/smallsql/junit/TestTransactions.java|,107,114><|project://smallsql0.21_src/src/smallsql/junit/TestTransactions.java|,174,181><|project://smallsql0.21_src/src/smallsql/junit/TestTransactions.java|,231,238>clone_class_i: assertEquals(1, con.createStatement().executeUpdate());ELITSAassertEqualsRsValue(,);ELITSAassertEqualsRsValue(new Integer(1),);ELITSAassertEquals(1, con.createStatement().executeUpdate());ELITSAassertEqualsRsValue(,);ELITSAassertEqualsRsValue(new Integer(1),);ELITSA<|project://smallsql0.21_src/src/smallsql/junit/TestTransactions.java|,197,203><|project://smallsql0.21_src/src/smallsql/junit/TestTransactions.java|,200,206>clone_class_i: case SQLTokenizer.FLOAT:ELITSAcase SQLTokenizer.DOUBLE:ELITSAcase SQLTokenizer.MONEY:ELITSAcase SQLTokenizer.SMALLMONEY:ELITSAcase SQLTokenizer.NUMERIC:ELITSAcase SQLTokenizer.DECIMAL:ELITSA<|project://smallsql0.21_src/src/smallsql/database/ExpressionArithmetic.java|,158,164><|project://smallsql0.21_src/src/smallsql/database/ExpressionArithmetic.java|,196,202>clone_class_i: switch(operation){ELITSAcase IN:ELITSAcase EQUALS_NULL:ELITSAcase EQUALS:    return comp == 0;ELITSAcase GREATER:   return comp >  0;ELITSAcase GRE_EQU:   return comp >= 0;ELITSAcase LESSER:    return comp <  0;case LES_EQU:   return comp <= 0;case UNEQUALS:  return comp != 0;case BETWEEN:<|project://smallsql0.21_src/src/smallsql/database/ExpressionArithmetic.java|,579,589><|project://smallsql0.21_src/src/smallsql/database/ExpressionArithmetic.java|,601,611>clone_class_i: wasNull = obj == null;ELITSAreturn obj;ELITSA}catch(Exception e){ELITSAthrow SmallSQLException.createFromException( e );ELITSA}ELITSA}ELITSA<|project://smallsql0.21_src/src/smallsql/database/SSCallableStatement.java|,104,110><|project://smallsql0.21_src/src/smallsql/database/SSCallableStatement.java|,143,149><|project://smallsql0.21_src/src/smallsql/database/SSResultSet.java|,111,117><|project://smallsql0.21_src/src/smallsql/database/SSResultSet.java|,218,224>clone_class_i: rows.add(row);ELITSA}ELITSA}ELITSA}ELITSA}ELITSAObject[][] result = new Object[rows.size()][];ELITSArows.toArray(result);return result;}<|project://smallsql0.21_src/src/smallsql/database/Database.java|,317,326><|project://smallsql0.21_src/src/smallsql/database/Database.java|,345,354>clone_class_i: }catch(Throwable e){ELITSAcon.rollback(savepoint);ELITSAthrow SmallSQLException.createFromException(e);ELITSA}finally{ELITSAif(con.getAutoCommit()) con.commit();ELITSA}ELITSA}<|project://smallsql0.21_src/src/smallsql/database/CommandSelect.java|,269,276><|project://smallsql0.21_src/src/smallsql/database/CommandSelect.java|,305,312><|project://smallsql0.21_src/src/smallsql/database/CommandSelect.java|,320,327>clone_class_i: this.offset = valueOffset;ELITSAif(readBoolean()) return 0;ELITSAswitch(dataType){ELITSAcase SQLTokenizer.BIT:ELITSAcase SQLTokenizer.BOOLEAN:ELITSAreturn readBoolean() ? 1 : 0;ELITSAcase SQLTokenizer.BINARY:case SQLTokenizer.VARBINARY:<|project://smallsql0.21_src/src/smallsql/database/StoreImpl.java|,742,750><|project://smallsql0.21_src/src/smallsql/database/StoreImpl.java|,802,810><|project://smallsql0.21_src/src/smallsql/database/StoreImpl.java|,862,870>clone_class_i: case SQLTokenizer.TIMESTAMP:ELITSAreturn readTimestamp();ELITSAcase SQLTokenizer.TIME:ELITSAreturn readTime();ELITSAcase SQLTokenizer.DATE:ELITSAreturn readDate();ELITSAcase SQLTokenizer.SMALLDATETIME:return readSmallDateTime();default:throw SmallSQLException.create(Language.VALUE_CANT_CONVERT, new Object[] { SQLTokenizer.getKeyWord(dataType),});}}@Override<|project://smallsql0.21_src/src/smallsql/database/StoreImpl.java|,848,861><|project://smallsql0.21_src/src/smallsql/database/StoreImpl.java|,908,921>clone_class_i: }ELITSAboolean isNull() throws Exception {ELITSAreturn param1.isNull();ELITSA}ELITSAfinal int getInt() throws Exception {ELITSAif(isNull()) return 0;ELITSAString str = param1.getString();<|project://smallsql0.21_src/src/smallsql/database/ExpressionFunctionOctetLen.java|,5,12><|project://smallsql0.21_src/src/smallsql/database/ExpressionFunctionBitLen.java|,5,12>CLONES:clone_class_i: 
Connection con = AllTests.getConnection();ELITSAtry{ELITSAcon.createStatement().execute();ELITSAassertRowCount( 0,);ELITSAcon.createStatement().execute();ELITSAassertRowCount( 1,);ELITSAassertRowCount( 0,);Statement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
[<|project://smallsql0.21_src/src/smallsql/junit/TestScrollable.java|,31,39>,<|project://smallsql0.21_src/src/smallsql/junit/TestScrollable.java|,57,65>,<|project://smallsql0.21_src/src/smallsql/junit/TestScrollable.java|,87,95>]
clone_class_i: 
try{ELITSArs.getString();ELITSAfail();ELITSA}catch(SQLException ex){ELITSAassertSQLException(, 0, ex);ELITSA}ELITSA}
[<|project://smallsql0.21_src/src/smallsql/junit/TestScrollable.java|,79,86>,<|project://smallsql0.21_src/src/smallsql/junit/TestScrollable.java|,110,117>]
clone_class_i: 
init();ELITSAConnection con = AllTests.getConnection();ELITSAStatement st = con.createStatement();ELITSAResultSet rs;ELITSAString oldValue;ELITSArs = st.executeQuery(+ table1 +);ELITSAassertTrue( rs.next() );oldValue = rs.getString();assertNull(oldValue);assertTrue( rs.next() );oldValue = rs.getString();int count = 1;while(rs.next()){
[<|project://smallsql0.21_src/src/smallsql/junit/TestOrderBy.java|,176,189>,<|project://smallsql0.21_src/src/smallsql/junit/TestOrderBy.java|,213,226>]
clone_class_i: 
try{ELITSAst.execute();ELITSAfail();ELITSA}catch(SQLException e){ELITSAassertSQLException(, 0, e);ELITSA}ELITSA
[<|project://smallsql0.21_src/src/smallsql/junit/TestExceptionMethods.java|,107,113>,<|project://smallsql0.21_src/src/smallsql/junit/TestExceptionMethods.java|,139,145>]
clone_class_i: 
Connection con = AllTests.getConnection();ELITSAtry{ELITSAcon.createStatement().execute();ELITSAassertRowCount( 0,);ELITSAcon.createStatement().execute();ELITSAassertRowCount( 1,);ELITSA
[<|project://smallsql0.21_src/src/smallsql/junit/TestOther.java|,81,87>,<|project://smallsql0.21_src/src/smallsql/junit/TestOther.java|,143,149>,<|project://smallsql0.21_src/src/smallsql/junit/TestTransactions.java|,52,58>]
clone_class_i: 
assertEquals(1,pr.executeUpdate());ELITSArs = pr.getGeneratedKeys();ELITSAassertNotNull(, rs);ELITSAassertEquals(,1,rs.getMetaData().getColumnCount());ELITSAassertEquals(,,rs.getMetaData().getColumnName(1));ELITSAassertRowCount(1,rs);ELITSA
[<|project://smallsql0.21_src/src/smallsql/junit/TestStatement.java|,196,202>,<|project://smallsql0.21_src/src/smallsql/junit/TestStatement.java|,209,215>]
clone_class_i: 
}catch(Exception e){ELITSASystem.out.println(+e);ELITSA}finally{ELITSASystem.out.println();ELITSASystem.out.println();ELITSA}ELITSA}
[<|project://smallsql0.21_src/src/smallsql/junit/BenchTest.java|,335,342>,<|project://smallsql0.21_src/src/smallsql/junit/BenchTest.java|,495,502>]
clone_class_i: 
init();ELITSAConnection con = AllTests.getConnection();ELITSAPreparedStatement pr = con.prepareStatement(+ table1 +);ELITSAfor(int i=1; i<=3; i++){ELITSAResultSet rs = pr.executeQuery( );ELITSAassertTrue  (+i, rs.next());ELITSA
[<|project://smallsql0.21_src/src/smallsql/junit/TestGroupBy.java|,91,97>,<|project://smallsql0.21_src/src/smallsql/junit/TestGroupBy.java|,104,110>]
clone_class_i: 
}finally{ELITSAtry{ELITSAcon.createStatement().execute();ELITSA}catch(Throwable e){e.printStackTrace();}ELITSAcon.setAutoCommit(true);ELITSA}ELITSA}
[<|project://smallsql0.21_src/src/smallsql/junit/TestTransactions.java|,86,93>,<|project://smallsql0.21_src/src/smallsql/junit/TestTransactions.java|,107,114>,<|project://smallsql0.21_src/src/smallsql/junit/TestTransactions.java|,174,181>,<|project://smallsql0.21_src/src/smallsql/junit/TestTransactions.java|,231,238>]
clone_class_i: 
assertEquals(1, con.createStatement().executeUpdate());ELITSAassertEqualsRsValue(,);ELITSAassertEqualsRsValue(new Integer(1),);ELITSAassertEquals(1, con.createStatement().executeUpdate());ELITSAassertEqualsRsValue(,);ELITSAassertEqualsRsValue(new Integer(1),);ELITSA
[<|project://smallsql0.21_src/src/smallsql/junit/TestTransactions.java|,197,203>,<|project://smallsql0.21_src/src/smallsql/junit/TestTransactions.java|,200,206>]
clone_class_i: 
case SQLTokenizer.FLOAT:ELITSAcase SQLTokenizer.DOUBLE:ELITSAcase SQLTokenizer.MONEY:ELITSAcase SQLTokenizer.SMALLMONEY:ELITSAcase SQLTokenizer.NUMERIC:ELITSAcase SQLTokenizer.DECIMAL:ELITSA
[<|project://smallsql0.21_src/src/smallsql/database/ExpressionArithmetic.java|,158,164>,<|project://smallsql0.21_src/src/smallsql/database/ExpressionArithmetic.java|,196,202>]
clone_class_i: 
switch(operation){ELITSAcase IN:ELITSAcase EQUALS_NULL:ELITSAcase EQUALS:    return comp == 0;ELITSAcase GREATER:   return comp >  0;ELITSAcase GRE_EQU:   return comp >= 0;ELITSAcase LESSER:    return comp <  0;case LES_EQU:   return comp <= 0;case UNEQUALS:  return comp != 0;case BETWEEN:
[<|project://smallsql0.21_src/src/smallsql/database/ExpressionArithmetic.java|,579,589>,<|project://smallsql0.21_src/src/smallsql/database/ExpressionArithmetic.java|,601,611>]
clone_class_i: 
wasNull = obj == null;ELITSAreturn obj;ELITSA}catch(Exception e){ELITSAthrow SmallSQLException.createFromException( e );ELITSA}ELITSA}ELITSA
[<|project://smallsql0.21_src/src/smallsql/database/SSCallableStatement.java|,104,110>,<|project://smallsql0.21_src/src/smallsql/database/SSCallableStatement.java|,143,149>,<|project://smallsql0.21_src/src/smallsql/database/SSResultSet.java|,111,117>,<|project://smallsql0.21_src/src/smallsql/database/SSResultSet.java|,218,224>]
clone_class_i: 
rows.add(row);ELITSA}ELITSA}ELITSA}ELITSA}ELITSAObject[][] result = new Object[rows.size()][];ELITSArows.toArray(result);return result;}
[<|project://smallsql0.21_src/src/smallsql/database/Database.java|,317,326>,<|project://smallsql0.21_src/src/smallsql/database/Database.java|,345,354>]
clone_class_i: 
}catch(Throwable e){ELITSAcon.rollback(savepoint);ELITSAthrow SmallSQLException.createFromException(e);ELITSA}finally{ELITSAif(con.getAutoCommit()) con.commit();ELITSA}ELITSA}
[<|project://smallsql0.21_src/src/smallsql/database/CommandSelect.java|,269,276>,<|project://smallsql0.21_src/src/smallsql/database/CommandSelect.java|,305,312>,<|project://smallsql0.21_src/src/smallsql/database/CommandSelect.java|,320,327>]
clone_class_i: 
this.offset = valueOffset;ELITSAif(readBoolean()) return 0;ELITSAswitch(dataType){ELITSAcase SQLTokenizer.BIT:ELITSAcase SQLTokenizer.BOOLEAN:ELITSAreturn readBoolean() ? 1 : 0;ELITSAcase SQLTokenizer.BINARY:case SQLTokenizer.VARBINARY:
[<|project://smallsql0.21_src/src/smallsql/database/StoreImpl.java|,742,750>,<|project://smallsql0.21_src/src/smallsql/database/StoreImpl.java|,802,810>,<|project://smallsql0.21_src/src/smallsql/database/StoreImpl.java|,862,870>]
clone_class_i: 
case SQLTokenizer.TIMESTAMP:ELITSAreturn readTimestamp();ELITSAcase SQLTokenizer.TIME:ELITSAreturn readTime();ELITSAcase SQLTokenizer.DATE:ELITSAreturn readDate();ELITSAcase SQLTokenizer.SMALLDATETIME:return readSmallDateTime();default:throw SmallSQLException.create(Language.VALUE_CANT_CONVERT, new Object[] { SQLTokenizer.getKeyWord(dataType),});}}@Override
[<|project://smallsql0.21_src/src/smallsql/database/StoreImpl.java|,848,861>,<|project://smallsql0.21_src/src/smallsql/database/StoreImpl.java|,908,921>]
clone_class_i: 
}ELITSAboolean isNull() throws Exception {ELITSAreturn param1.isNull();ELITSA}ELITSAfinal int getInt() throws Exception {ELITSAif(isNull()) return 0;ELITSAString str = param1.getString();
[<|project://smallsql0.21_src/src/smallsql/database/ExpressionFunctionOctetLen.java|,5,12>,<|project://smallsql0.21_src/src/smallsql/database/ExpressionFunctionBitLen.java|,5,12>]
